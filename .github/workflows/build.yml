name: Shortener Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  shortener-build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.23

    - name: Build Shortener
      run: |
        go build -v ./...
        go test -v ./...
      working-directory: shortener

    - name: Run Linting
      uses: golangci/golangci-lint-action@v6
      with:
        version: latest
        working-directory: shortener

    - name: Build Shortener Docker Image
      run: |
        docker build -t ${{ secrets.DOCKER_REGISTRY || 'localhost:5000' }}/url-shortener:latest .
      working-directory: shortener

  deploy:
    runs-on: ubuntu-latest
    needs: shortener-build
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v3

    - name: Set up SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -t rsa ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts
        chmod 644 ~/.ssh/known_hosts

    - name: Push to Docker Hub
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker build -t ${{ secrets.DOCKER_REGISTRY }}/url-shortener:latest .
        docker push ${{ secrets.DOCKER_REGISTRY }}/url-shortener:latest
      working-directory: shortener

    - name: Deploy to VPS
      run: |
        make deploy-prod
      working-directory: shortener

    - name: Verify deployment
      run: |
        ssh -i ~/.ssh/id_rsa url-shortener@${{ secrets.VPS_HOST }} "curl -s http://localhost:8080 | grep -q 'URL Shortener'"

    - name: Cleanup old containers
      run: |
        ssh -i ~/.ssh/id_rsa url-shortener@${{ secrets.VPS_HOST }} "docker system prune -f"
