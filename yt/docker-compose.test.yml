version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: yt-postgres-test
    environment:
      POSTGRES_DB: youtube_clone_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d youtube_clone_test"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: yt-backend-test
    environment:
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/youtube_clone_test?sslmode=disable
      JWT_SECRET: test-secret-key
      PORT: 8081
      UPLOAD_DIR: /app/uploads
    volumes:
      - yt_test_uploads:/app/uploads
    ports:
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: yt-frontend-test
    ports:
      - "3000:3000"
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  yt_test_uploads:
    driver: local