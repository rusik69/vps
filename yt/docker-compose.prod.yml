version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: yt-postgres-prod
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-youtube_clone}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-youtube_clone}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - yt-network

  backend:
    image: ${DOCKER_REGISTRY:-}yt-backend:${VERSION:-latest}
    container_name: yt-backend-prod
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-youtube_clone}?sslmode=disable
      JWT_SECRET: ${JWT_SECRET}
      PORT: 8080
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - yt-network

  frontend:
    image: ${DOCKER_REGISTRY:-}yt-frontend:${VERSION:-latest}
    container_name: yt-frontend-prod
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - yt-network

  nginx:
    image: nginx:alpine
    container_name: yt-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - yt-network

volumes:
  postgres_data_prod:
    external: true
    name: yt_postgres_data

networks:
  yt-network:
    driver: bridge